#!/bin/sh

prefix=/usr/local
version="0.03"

function devstdinexistence() {
    if test ! -e "/dev/stdin" ; then
	echo "Error: the operating system must support /dev/stdin file"
	exit 1
    fi
}

function pythonexistence() {
    python -V >/dev/null 2>/dev/null
    if test "$?" = "0" ; then
	echo "yes"
    else
	echo "no"
    fi
}

function stdintreplacement() {
    rm -f stdint.h
    cat > stdinttest.c <<EOF
#include <stdint.h>
int main(void) {uint8_t a = 0; uint32_t b = 0; return 0; }
EOF
    gcc -o stdinttest stdinttest.c 2>/dev/null
    if test "$?" != "0" ; then
	echo "#include <inttypes.h>" > stdint.h
	echo "Warning: stdint.h is missing (needed for portable types)"
	echo ""
    fi
}

if test -z "$CC" ; then
    CC=gcc
fi

for opt in "$@" ; do
	case $opt in
	--prefix=*)
		prefix=`echo $opt | sed -n 's/--prefix=\(.*\)/\1/p'`
		;;
	--package-prefix=*)
		packageprefix=`echo $opt | sed -n 's/--package-prefix=\(.*\)/\1/p'`
		;;
	--help)
		echo ""
		echo "Valid options are:"
		echo "--prefix=dir           Install to prefix 'dir'"
 		echo "--package-prefix=dest  Pretend to install to the prefix,"
		echo "                       but copy files to 'dest/prefix' on make install"
		exit
		;;
	esac
done

devstdinexistence

stdintreplacement

havepython=$(pythonexistence)
if test "$havepython" = "no"; then
    echo
    echo "NOTICE: developers need a Python interpreter for self-testing (make check)"
    echo
fi

if test ! -z "$packageprefix" ; then
    prefix="$packageprefix/$prefix"
fi

sed -e "s|{PREFIX}|$prefix|g" \
    -e "s|{VERSION}|$version|g" \
    -e "s|{CC}|$CC|g" < Makefile.in > Makefile

echo "#define VERSION \"$version\"" > version.h

echo
echo "Would install binary to directory $prefix/bin."
echo
echo "Configure succesful."
